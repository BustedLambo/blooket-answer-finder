{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","state","bruh","code","doSearchGame","bind","e","this","setState","target","value","a","fetch","res","status","alert","json","result","r","push","Card","style","padding","float","title","author","maxWidth","maxHeight","src","coverImage","url","i","questions","length","ii","answers","correctAnswers","includes","undefined","image","question","textAlign","className","Navbar","bg","expand","variant","Brand","href","Nav","class","marginTop","Form","Control","onChange","setCode","type","placeholder","width","Button","onClick","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1ed4b2dd.chunk.js","sourcesContent":["import React from 'react';\n\nimport './App.css';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Navbar, Card, Form, Button, Nav } from 'react-bootstrap';\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      bruh: [],\n      code: ''\n    };\n\n    this.doSearchGame = this.doSearchGame.bind(this);\n  }\n\n  setCode(e) {\n    this.setState({\n      code: e.target.value\n    });\n  }\n\n  async doSearchGame() {\n    let res = await fetch(`https://api.blooket.com/api/games?gameId=${this.state.code}`);\n\n    if(res.status !== 200){\n      alert('There was a problem finding the game requested. Please try again');\n      return;\n    }\n\n    let result = await res.json();\n\n    let r = [];\n\n    r.push(\n      <Card>\n        <div style={{padding: '5px'}}>\n          <p style={{float: 'right'}}><i>{result.title}</i> made by {result.author}</p>\n          <img style={{maxWidth: '300px', maxHeight: '300px', float: 'left'}} src={result.coverImage.url}/>\n        </div>\n      </Card>\n    );\n\n    var i;\n    for(i = 0; i < result.questions.length; i++){\n      let a = [];\n    \n      var ii;\n      for(ii = 0; ii < result.questions[i].answers.length; ii++){\n        if(result.questions[i].correctAnswers.includes(result.questions[i].answers[ii])){\n          a.push(<p>{result.questions[i].answers[ii]}</p>);\n        }\n      }\n\n      if(result.questions[i].image === undefined || result.questions[i].image === null){\n        r.push(\n          <>\n            <br/>\n            <Card>\n              <div style={{padding: '5px'}}>\n              <p style={{float: 'left'}}>{result.questions[i].question}</p>\n                <div style={{float: 'right', textAlign: 'right'}}>\n                  <p>Correct Answer: {a}</p>\n                </div>\n              </div>\n            </Card>\n          </>\n        );   \n      } else {\n        r.push(\n          <>\n            <br/>\n            <Card>\n              <div style={{padding: '5px'}}>\n                <div style={{float: 'left'}}>\n                  <p>{result.questions[i].question}</p>\n                  <img style={{maxWidth: '300px', maxHeight: '300px', float: 'left'}} src={result.questions[i].image.url}/>  \n                </div>\n                <div style={{float: 'right', textAlign: 'right'}}>\n                  <p>Correct Answer: {a}</p>\n                </div>\n              </div>\n            </Card>\n          </>\n        );   \n      }\n    }\n\n    this.setState({\n      bruh: r\n    });\n  }\n\n  render() {\n    return(\n      <div className=\"app\">\n        <Navbar bg=\"dark\" expand=\"lg\" variant=\"dark\">\n          <Navbar.Brand href=\"#\">blooket answer finder pls give me reddit gold</Navbar.Brand>\n          <Nav class=\"mr-auto\"/>\n          <Navbar.Brand>made by Runabox#0001 ur welcome</Navbar.Brand>\n        </Navbar>\n\n        <div className=\"container\" style={{marginTop: '30px'}}>\n          <Card>\n            <Form style={{padding: '5px'}}>\n              <Form.Control onChange={(e) => this.setCode(e)}type=\"text\" placeholder=\"Enter Game Code\" style={{float: 'left', width: '85%'}} />\n              <div className=\"divider\"/>\n              <Button style={{float: 'right'}}variant=\"primary\" onClick={() => this.doSearchGame()}>\n                Search for answers\n              </Button>\n            </Form>\n          </Card> \n          <br/>\n          <br/>\n          {this.state.bruh}\n          <br/>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}